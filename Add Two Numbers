# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        arr1 = []
        arr2 = []
        while (l1 != None):
            arr1.append(l1.val)
            l1 = l1.next
            
        while(l2 != None):
            arr2.append(l2.val)
            l2 = l2.next
            
        diff = len(arr1) - len(arr2)
        sArr = arr2 if diff>0 else arr1
            
        for i in range(diff):
            sArr.append(0)
        l = []
        sum = 0
        carry = 0
        for i in range(len(arr1)):
            sum = int((carry + arr1[i] + arr2[i]) % 10)
            carry = int((arr1[i] + arr2[i])/10)
            l.append(sum)
        l.reverse()
        lx = None
        for i in l:
            lx = ListNode(i,lx)
        return lx
            
       
            
        
